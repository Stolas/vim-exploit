#!/usr/bin/env python
# $$COPYRIGHT$$
# Author: $$AUTHOR$$

from struct import pack, unpack
from subprocess import call

### The Exploit
buff = "AAAA"
buff += "\x42\x42\x42\x42"
buff += pack("<L", 0x43434343)
# exploit += $$SHELLCODE$$


## The delivery script
def exploit(filename, binary, shellcode=None):

    if shellcode:
        pass
        # TODO: Set / Replace the shellcode in the exploit

    print("[+] Writing file: %s" % filename)
    fd = open(filename, "w")
    print("[+] Writing %d bytes" % len(buff))
    fd.write(buff)
    fd.close()
    print("[+] File Closed")

    if binary:
        print("[+] Launching Target.")
        try:
            call([binary, filename])
        except OSError as ex:
            print("[!] Failed to call %s." % target)
        print("[+] Exploit Done.")


if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('--no-banner', action='store_false')
    parser.add_argument('-f', '--filename', action='store', default='exploit.bin')
    parser.add_argument('-b', '--bin', '--binary', action='store')
    parser.add_argument('-s', '--shellcode', action='store')
    args = parser.parse_args()

    if args.no_banner:
        print("$$BANNER$$")

    shellcode = None
    if args.shellcode:
        fd = open(args.shellcode, 'r')
        shellcode = fd.read()
        fd.close()

    exploit(args.filename, args.bin, shellcode)
